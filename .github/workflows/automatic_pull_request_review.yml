name: Automatic pull request review

on:
  pull_request:
    types: [ opened, reopened, edited, synchronize ]

defaults:
  run:
    working-directory: ios

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SwiftLint for files changed in the PR
        uses: norio-nomura/action-swiftlint@3.2.1
        env:
          DIFF_BASE: ${{ github.base_ref }}
        with:
          args: --strict

  review_pull_request:
    name: Pull request review by Danger
    runs-on: macOS-latest
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.5.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Google Services for Staging
      env:
        IOS_GOOGLE_SERVICE_INFO_STAGING: ${{ secrets.IOS_GOOGLE_SERVICE_INFO_STAGING }}
      run: |
        mkdir -p Surveys/Configurations/Plists/GoogleService/Staging
        touch Surveys/Configurations/Plists/GoogleService/Staging/GoogleService-Info.plist
        echo $IOS_GOOGLE_SERVICE_INFO_STAGING | base64 --decode > ./Surveys/Configurations/Plists/GoogleService/Staging/GoogleService-Info.plist

    - name: Setup Android Signing
      env:
        ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
        ANDROID_SIGNING_PROPERTIES: ${{ secrets.ANDROID_SIGNING_PROPERTIES }}
      run: |
        touch ../config/release.keystore
        echo $ANDROID_RELEASE_KEYSTORE > ../config/release.keystore\
        touch ../signing.properties
        echo $ANDROID_SIGNING_PROPERTIES > ../signing.properties

    - name: Setup Java JDK
      uses: actions/setup-java@v2.1.0
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Cache Gradle
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches/modules-*
          ~/.gradle/caches/jars-*
          ~/.gradle/caches/build-cache-*
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Generate KMM frameworks for Cocoapods
      run: |
        cd ..
        ./gradlew generateDummyFramework

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.6.0'
        bundler: '2.3.10'

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-gems-

    - name: Bundle install
      run: |
        ruby --version
        bundle --version
        bundle install

    - name: Cache Pods
      uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install Pods Dependencies
      run: bundle exec pod install

    - name: Build and Test
      run: bundle exec fastlane build_and_test
      env:
        CI: true

# TODO: Will integrate Danger and Xcov later
#    - name: Clean up previous code coverage report
#      run: bundle exec fastlane clean_up_xcov
#
#    - name: Review pull request by Danger
#      env:
#        DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: |
#        ls
#        bundle exec danger
